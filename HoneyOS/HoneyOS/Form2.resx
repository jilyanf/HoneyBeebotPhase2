<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="TransparentButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>